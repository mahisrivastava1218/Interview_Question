'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.trim().split('\n').map(string => {
        return string.replace(/\s+/g, " ").trim();
    });
    main();
});

function readLine() {
    return inputString[currentLine++];
}

function readIntArr() {
    let str = readLine();
    str = str.split(" ");
    let arr = [];
    for ( let i = 0; i < str.length; i++ ) {
        arr.push(parseInt(str[i], 10));
    }
    return arr;
}

function print(x) {
    process.stdout.write(x + "");
}
const INF = 2147483647;

function dfs(grid,result,visited,i,j,distance){
    if (
        i < 0 || j < 0 || i >= grid.length || j >= grid[0].length ||
        visited[i][j] || grid[i][j]===-1 || result[i][j] <= distance
    ) {
        return;
    }
    result[i][j]=distance;
    // console.log(result,i,j);
    visited[i][j]=true;
        console.log(visited,"vis");

       dfs(grid,result,visited,i-1,j,distance+1);
       dfs(grid,result,visited,i+1,j,distance+1);
       dfs(grid,result,visited,i,j-1,distance+1);
       dfs(grid,result,visited,i,j+1,distance+1);
    visited[i][j] = false;
}
function wallsAndGates(grid,n,m){
    let result = Array.from({length:n},()=>new Array(m).fill(INF));
    let visited = Array.from({length:n},()=>new Array(m).fill(false));
    for(let i=0;i<n;i++){
        for(let j=0;j<m;j++){
            if(grid[i][j]===0){
                dfs(grid,result,visited,i,j,0);
            }else if(grid[i][j]===-1){
                    result[i][j]=-1;
                    visited[i][j]=true;
            }
        }
    }
    return result;
}

function main() {
    
    let [n,m] = readIntArr();
    let grid = [];
   
    for (let i = 0; i < n; i++) {
        let temp = readIntArr();
        grid.push(temp);
       
    }
    let distance = wallsAndGates(grid, n, m);
    for (const row of distance) {
        console.log(...row);
    }
}
