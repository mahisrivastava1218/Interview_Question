//Ques- Decode the string

class Solution {
    decodedString(s) {
    // // let stack1=[];
    // // for(let i=0;i<s.length;i++){
    // //     if(s[i] !== "]"){
    // //           stack1.push(s[i]);
    // //     }else{
    // //         let stack2=[];
    // //         while(stack1.length>0 && stack1[stack1.length-1]!== "["){
    // //             stack2.push(stack1.pop());
    // //         }
    // //         stack1.pop();
    // //         let num;
    // //         while(stack1.length>0 && !isNaN(stack1[stack1.length-1])){
    // //             num = stack1.pop()+num;
    // //         }
    // //         num = parseInt(num,10);
    // //         let temp = stack2.reverse().join('');
    // //         let repeatString = temp.repeat(num);
    // //         for(const char of repeatString){
    // //             stack1.push(char);
    // //         }
    // //     }
    // // }
    // return stack1.join('');
    //tc:O(n) SC:O(n)
    //using only one stack some optimal tc:O(n) SC:O(n)
    let stack1=[];
    for(let i=0;i<s.length;i++){
        if(s[i] !== "]"){
              stack1.push(s[i]);
        }else{
            let decodeStr="";
            while(stack1.length>0 && stack1[stack1.length-1]!== "["){
               decodeStr = stack1.pop()+ decodeStr;
            }
            stack1.pop();
            let num="";
            while(stack1.length>0 && !isNaN(stack1[stack1.length-1])){
                num = stack1.pop()+num;
            }
            num = parseInt(num,10);
            let repeatString = decodeStr.repeat(num);
            for(const char of repeatString){
                stack1.push(char);
            }
        }
    }
    return stack1.join('');

    }
}
